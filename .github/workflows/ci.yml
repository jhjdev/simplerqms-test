name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test-backend:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: simplerqms_test
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: 'node/package-lock.json'
    
    - name: Install dependencies
      run: cd node && npm ci
    
    - name: Run tests
      run: cd node && npm test
      env:
        DATABASE_URL: postgres://postgres:postgres@localhost:5432/simplerqms_test
  
  test-frontend:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: 'frontend/package-lock.json'
    
    - name: Install dependencies
      run: cd frontend && npm ci
    
    - name: Run tests
      run: cd frontend && npm test
  
  lint:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
    
    - name: Install backend dependencies
      run: cd node && npm ci
    
    - name: Install frontend dependencies
      run: cd frontend && npm ci
    
    - name: Lint backend
      run: cd node && npm run lint
    
    - name: Lint frontend
      run: cd frontend && npm run lint
  
  build:
    runs-on: ubuntu-latest
    needs: [test-backend, test-frontend, lint]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
    
    - name: Build backend
      run: cd node && npm ci && npm run build
    
    - name: Build frontend
      run: cd frontend && npm ci && npm run build
    
    - name: Upload backend artifact
      uses: actions/upload-artifact@v3
      with:
        name: backend-build
        path: node/dist
    
    - name: Upload frontend artifact
      uses: actions/upload-artifact@v3
      with:
        name: frontend-build
        path: frontend/build
